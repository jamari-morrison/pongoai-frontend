import * as React from 'react';
import { makeStyles } from '@fluentui/react-make-styles';
import { PublicReviewCard } from './PublicReviewCard';
import { RSA_PSS_SALTLEN_AUTO } from 'constants';
const useStyles = makeStyles({
  popupBackground_ACTIVE: {
    width: '100vw',
    height: '100vh',
    overflowY: 'hidden',
    position: 'absolute',
    top: '0%',
    left: '0%',
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
    zIndex: 1000,
    border: 'none',
  },
  popupBackground_DISABLED: {
    width: '0px',
    height: '0px',
    padding: '0px',
    position: 'absolute',
    top: '-1000px',
    zIndex: -1,
  },
  popupCardHolder: {
    margin: 'auto',
    width: '50vw',
    zIndex: 1001,
  },
});

type PopupProps = {
  //Name of the customer who left the review
  customerName: string;

  //Rating (0-5) the customer gave the the product being reviewed
  starRating: number;

  //path to an image of the customer who left the review
  profileImg: string;

  //Boolean identifying wether or not the customer who left this review is verified
  isVerified: boolean;

  //Location of the customer, expected in display format
  location: string;

  //Time the customer left the review, expected in display format
  timestamp: string;

  //Body content of the customer's review
  reviewText: string;

  //The review's unique ID, generated by the database
  id: string;
};

//TODO: fix the scrolling not re-enabling after removing the popup
export const Popup = (props: PopupProps) => {
  const styles = useStyles();
  const [isActive, setIsActive] = React.useState(true);

  isActive ? (document.body.style.overflow = 'hidden') : (document.body.style.overflow = 'scroll');

  const deactivatePopup = () => {
    setIsActive(false);
    document.body.style.overflow = 'scroll';
  };
  return (
    <button
      className={isActive ? styles.popupBackground_ACTIVE : styles.popupBackground_DISABLED}
      onClick={deactivatePopup}
    >
      {isActive ? (
        <div className={styles.popupCardHolder}>
          <PublicReviewCard
            customerName={props.customerName}
            starRating={props.starRating}
            profileImg={props.profileImg}
            isVerified={props.isVerified}
            location={props.location}
            timestamp={props.timestamp}
            reviewText={props.reviewText}
            id={props.id}
          />
        </div>
      ) : (
        <div></div>
      )}
    </button>
  );
};
