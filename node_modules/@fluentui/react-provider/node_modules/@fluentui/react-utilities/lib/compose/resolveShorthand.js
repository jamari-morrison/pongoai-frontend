import { __assign } from "tslib";
import { isValidElement } from 'react';
/**
 * Resolves ShorthandProps into ObjectShorthandProps, to ensure normalization of the signature
 * being passed down to getSlots method
 * @param value - the base ShorthandProps
 * @param options - options to resolve ShorthandProps
 */

export function resolveShorthand(value, options) {
  var _a = options || {},
      _b = _a.required,
      required = _b === void 0 ? false : _b,
      defaultProps = _a.defaultProps;

  if (value === null || value === undefined && !required) {
    return undefined;
  }

  var resolvedShorthand = {};

  if (typeof value === 'string' || typeof value === 'number' || Array.isArray(value) || /*#__PURE__*/isValidElement(value)) {
    resolvedShorthand.children = value;
  } else if (typeof value === 'object') {
    resolvedShorthand = value;
  }

  return defaultProps ? __assign(__assign({}, defaultProps), resolvedShorthand) : resolvedShorthand;
}
//# sourceMappingURL=resolveShorthand.js.map