import { makeStyles as vanillaMakeStyles } from '@fluentui/make-styles';
import { useFluent } from '@fluentui/react-shared-contexts';
import * as React from 'react';
import { useRenderer } from './RendererContext';

function isInsideComponent() {
  try {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    React.useContext({});
    return true;
  } catch (e) {
    return false;
  }
}

export function makeStyles(stylesBySlots) {
  var getStyles = vanillaMakeStyles(stylesBySlots);

  if (process.env.NODE_ENV !== 'production') {
    if (isInsideComponent()) {
      throw new Error(["makeStyles(): this function cannot be called in component's scope.", 'All makeStyles() calls should be top level i.e. in a root scope of a file.'].join(' '));
    }
  }

  return function useClasses() {
    var dir = useFluent().dir;
    var renderer = useRenderer();
    var options = {
      dir: dir,
      renderer: renderer
    };
    return getStyles(options);
  };
}
//# sourceMappingURL=makeStyles.js.map