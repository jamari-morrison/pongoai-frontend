"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFluentProvider = exports.fluentProviderShorthandProps = void 0;

var tslib_1 = /*#__PURE__*/require("tslib");

var react_tabster_1 = /*#__PURE__*/require("@fluentui/react-tabster");

var react_theme_1 = /*#__PURE__*/require("@fluentui/react-theme");

var react_shared_contexts_1 = /*#__PURE__*/require("@fluentui/react-shared-contexts");

var react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");

var useThemeStyleTag_1 = /*#__PURE__*/require("./useThemeStyleTag");

exports.fluentProviderShorthandProps = ['root'];
/**
 * Create the state required to render FluentProvider.
 *
 * The returned state can be modified with hooks such as useFluentProviderStyles,
 * before being passed to renderFluentProvider.
 *
 * @param props - props from this instance of FluentProvider
 * @param ref - reference to root HTMLElement of FluentProvider
 */

var useFluentProvider = function (props, ref) {
  var parentContext = react_shared_contexts_1.useFluent();
  var parentTheme = react_shared_contexts_1.useTheme();
  /**
   * TODO: add merge functions to "dir" merge,
   * nesting providers with the same "dir" should not add additional attributes to DOM
   * see https://github.com/microsoft/fluentui/blob/0dc74a19f3aa5a058224c20505016fbdb84db172/packages/fluentui/react-northstar/src/utils/mergeProviderContexts.ts#L89-L93
   */

  var _a = props.dir,
      dir = _a === void 0 ? parentContext.dir : _a,
      _b = props.targetDocument,
      targetDocument = _b === void 0 ? parentContext.targetDocument : _b,
      _c = props.theme,
      theme = _c === void 0 ? {} : _c;
  var mergedTheme = react_theme_1.mergeThemes(parentTheme, theme);
  return {
    dir: dir,
    targetDocument: targetDocument,
    theme: mergedTheme,
    themeClassName: useThemeStyleTag_1.useThemeStyleTag({
      theme: mergedTheme,
      targetDocument: targetDocument
    }),
    components: {
      root: 'div'
    },
    root: react_utilities_1.getNativeElementProps('div', tslib_1.__assign(tslib_1.__assign({}, props), {
      dir: dir,
      ref: react_utilities_1.useMergedRefs(ref, react_tabster_1.useKeyboardNavAttribute())
    }))
  };
};

exports.useFluentProvider = useFluentProvider;
//# sourceMappingURL=useFluentProvider.js.map