import * as PopperJs from '@popperjs/core';
import * as React from 'react';
import type { PositioningProps } from './types';
interface PopperOptions extends PositioningProps {
    /**
     * If false, delays Popper's creation.
     * @default true
     */
    enabled?: boolean;
    onStateUpdate?: (state: Partial<PopperJs.State>) => void;
    /**
     * Enables the Popper box to position itself in 'fixed' mode (default value is position: 'absolute')
     * @default false
     */
    positionFixed?: boolean;
    /**
     * When the reference element or the viewport is outside viewport allows a popper element to be fully in viewport.
     * "all" enables this behavior for all axis.
     */
    unstable_disableTether?: boolean | 'all';
}
/**
 * Exposes Popper positioning API via React hook. Contains few important differences between an official "react-popper"
 * package:
 * - style attributes are applied directly on DOM to avoid re-renders
 * - refs changes and resolution is handled properly without re-renders
 * - contains a specific to React fix related to initial positioning when containers have components with managed focus
 *   to avoid focus jumps
 */
export declare function usePopper(options?: PopperOptions): {
    targetRef: React.MutableRefObject<any>;
    containerRef: React.MutableRefObject<any>;
    arrowRef: React.MutableRefObject<any>;
};
export {};
