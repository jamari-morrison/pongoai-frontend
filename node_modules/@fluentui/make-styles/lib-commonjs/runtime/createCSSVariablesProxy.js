"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveProxyValues = exports.isProxy = exports.createCSSVariablesProxy = void 0;
var isProxySymbol = '__isProxy__';
/**
 * @internal
 */

function createCSSVariablesProxy(prefix) {
  // Better to debug with classic function
  function proxyToStr() {
    return "var(--" + prefix + ")";
  }

  var proxy = new Proxy(proxyToStr, {
    has: function (_, key) {
      return key === isProxySymbol;
    },
    get: function (target, key) {
      if (key === 'toString' || key === Symbol.toPrimitive) {
        return target;
      }

      return createCSSVariablesProxy(prefix ? [prefix, key].join('-') : key.toString());
    }
  });
  return proxy;
}

exports.createCSSVariablesProxy = createCSSVariablesProxy;

function isProxy(object) {
  return typeof object === 'function' && isProxySymbol in object;
}

exports.isProxy = isProxy;
/**
 * @internal
 */

function resolveProxyValues(value) {
  if (isProxy(value)) {
    return value.toString();
  }

  if (Array.isArray(value)) {
    return value.map(resolveProxyValues);
  }

  if (value === null) {
    return value;
  }

  if (typeof value === 'object') {
    var expanded = {}; // eslint-disable-next-line guard-for-in

    for (var key in value) {
      var internalValue = value[key];
      expanded[key] = resolveProxyValues(internalValue);
    }

    return expanded;
  }

  return value;
}

exports.resolveProxyValues = resolveProxyValues;
//# sourceMappingURL=createCSSVariablesProxy.js.map