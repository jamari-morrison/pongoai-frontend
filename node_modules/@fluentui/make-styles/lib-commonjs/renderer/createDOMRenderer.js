"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDOMRenderer = void 0;

var getStyleSheetForBucket_1 = /*#__PURE__*/require("./getStyleSheetForBucket");

var lastIndex = 0;
/**
 * Creates a new instances of a renderer.
 *
 * @public
 */

function createDOMRenderer(target) {
  if (target === void 0) {
    target = typeof document === 'undefined' ? undefined : document;
  }

  var renderer = {
    insertionCache: {},
    styleElements: {},
    id: "d" + lastIndex++,
    insertCSSRules: function (cssRules) {
      // eslint-disable-next-line guard-for-in
      for (var styleBucketName in cssRules) {
        var cssRulesForBucket = cssRules[styleBucketName];
        var sheet = target && getStyleSheetForBucket_1.getStyleSheetForBucket(styleBucketName, target, renderer); // This is a hot path in rendering styles: ".length" is cached in "l" var to avoid accesses the property

        for (var i = 0, l = cssRulesForBucket.length; i < l; i++) {
          var ruleCSS = cssRulesForBucket[i];

          if (renderer.insertionCache[ruleCSS]) {
            continue;
          }

          renderer.insertionCache[ruleCSS] = styleBucketName;

          if (sheet) {
            try {
              sheet.insertRule(ruleCSS, sheet.cssRules.length);
            } catch (e) {
              // We've disabled these warnings due to false-positive errors with browser prefixes
              if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {
                // eslint-disable-next-line no-console
                console.error("There was a problem inserting the following rule: \"" + ruleCSS + "\"", e);
              }
            }
          }
        }
      }
    }
  };
  return renderer;
}

exports.createDOMRenderer = createDOMRenderer;
/**
 * Suffixes to be ignored in case of error
 */

var ignoreSuffixes = /*#__PURE__*/['-moz-placeholder', '-moz-focus-inner', '-moz-focusring', '-ms-input-placeholder', '-moz-read-write', '-moz-read-only'].join('|');
var ignoreSuffixesRegex = /*#__PURE__*/new RegExp(":(" + ignoreSuffixes + ")");
//# sourceMappingURL=createDOMRenderer.js.map