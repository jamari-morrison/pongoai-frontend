import * as React from 'react';
/**
 * To support SSR, the auto incrementing id counter is stored in a context. This allows it to be reset on every request
 * to ensure the client and server are consistent.
 *
 * @internal
 */
export declare type SSRContextValue = {
    current: number;
};
/**
 * Default context value to use in case there is no SSRProvider. This is fine for client-only apps.
 *
 * @internal
 */
export declare const defaultSSRContextValue: SSRContextValue;
export declare const SSRContext: React.Context<SSRContextValue>;
/**
 * @internal
 */
export declare function useSSRContext(): SSRContextValue;
/**
 * When using SSR with Fluent UI, applications must be wrapped in an SSRProvider. This ensures that auto generated ids
 * are consistent between the client and server.
 *
 * @public
 */
export declare const SSRProvider: React.FC;
/**
 * Returns whether the component is currently being server side rendered or hydrated on the client. Can be used to delay
 * browser-specific rendering until after hydration. May cause re-renders on a client when is used within SSRProvider.
 */
export declare function useIsSSR(): boolean;
