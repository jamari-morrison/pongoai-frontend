import { __assign } from "tslib";
import { hcCanvasText, hcHighlightText, hcDisabled, hcHyperlink, hcHighlight, hcButtonText, hcCanvas, hcButtonFace, grey, sharedColors, white, black } from '../global/colors';
export var generateColorTokens = function () {
  return {
    colorNeutralForeground1: hcCanvasText,
    colorNeutralForeground2: hcCanvasText,
    colorNeutralForeground2Hover: hcHighlightText,
    colorNeutralForeground2Pressed: hcHighlightText,
    colorNeutralForeground2Selected: hcHighlightText,
    colorNeutralForeground2BrandHover: hcHighlightText,
    colorNeutralForeground2BrandPressed: hcHighlightText,
    colorNeutralForeground2BrandSelected: hcHighlightText,
    colorNeutralForeground3: hcCanvasText,
    colorNeutralForeground3Hover: hcHighlightText,
    colorNeutralForeground3Pressed: hcHighlightText,
    colorNeutralForeground3Selected: hcHighlightText,
    colorNeutralForeground3BrandHover: hcHighlightText,
    colorNeutralForeground3BrandPressed: hcHighlightText,
    colorNeutralForeground3BrandSelected: hcHighlightText,
    colorNeutralForeground4: hcCanvasText,
    colorNeutralForegroundDisabled: hcDisabled,
    colorBrandForegroundLink: hcHyperlink,
    colorBrandForegroundLinkHover: hcHyperlink,
    colorBrandForegroundLinkPressed: hcHyperlink,
    colorBrandForegroundLinkSelected: hcHyperlink,
    colorCompoundBrandForeground1: hcHighlight,
    colorCompoundBrandForeground1Hover: hcHighlight,
    colorCompoundBrandForeground1Pressed: hcHighlight,
    colorBrandForeground1: hcCanvasText,
    colorBrandForeground2: hcButtonText,
    colorNeutralForegroundInverted: hcCanvas,
    colorNeutralForegroundOnBrand: hcButtonText,
    colorNeutralForegroundInvertedLink: hcHyperlink,
    colorNeutralForegroundInvertedLinkHover: hcHyperlink,
    colorNeutralForegroundInvertedLinkPressed: hcHyperlink,
    colorNeutralForegroundInvertedLinkSelected: hcHyperlink,
    colorNeutralBackground1: hcCanvas,
    colorNeutralBackground1Hover: hcHighlight,
    colorNeutralBackground1Pressed: hcHighlight,
    colorNeutralBackground1Selected: hcHighlight,
    colorNeutralBackground2: hcCanvas,
    colorNeutralBackground2Hover: hcHighlight,
    colorNeutralBackground2Pressed: hcHighlight,
    colorNeutralBackground2Selected: hcHighlight,
    colorNeutralBackground3: hcCanvas,
    colorNeutralBackground3Hover: hcHighlight,
    colorNeutralBackground3Pressed: hcHighlight,
    colorNeutralBackground3Selected: hcHighlight,
    colorNeutralBackground4: hcCanvas,
    colorNeutralBackground4Hover: hcHighlight,
    colorNeutralBackground4Pressed: hcHighlight,
    colorNeutralBackground4Selected: hcHighlight,
    colorNeutralBackground5: hcCanvas,
    colorNeutralBackground5Hover: hcHighlight,
    colorNeutralBackground5Pressed: hcHighlight,
    colorNeutralBackground5Selected: hcHighlight,
    colorNeutralBackground6: hcCanvas,
    colorNeutralBackgroundInverted: hcCanvasText,
    colorSubtleBackground: 'transparent',
    colorSubtleBackgroundHover: hcHighlight,
    colorSubtleBackgroundPressed: hcHighlight,
    colorSubtleBackgroundSelected: hcHighlight,
    colorTransparentBackground: 'transparent',
    colorTransparentBackgroundHover: hcHighlight,
    colorTransparentBackgroundPressed: hcHighlight,
    colorTransparentBackgroundSelected: hcHighlight,
    colorNeutralBackgroundDisabled: hcCanvas,
    colorNeutralStencil1: grey[8],
    colorNeutralStencil2: grey[52],
    colorBrandBackground: hcButtonFace,
    colorBrandBackgroundHover: hcHighlight,
    colorBrandBackgroundPressed: hcHighlight,
    colorBrandBackgroundSelected: hcHighlight,
    colorCompoundBrandBackground: hcHighlight,
    colorCompoundBrandBackgroundHover: hcHighlight,
    colorCompoundBrandBackgroundPressed: hcHighlight,
    colorBrandBackgroundStatic: hcCanvas,
    colorBrandBackground2: hcButtonFace,
    colorNeutralStrokeAccessible: hcCanvasText,
    colorNeutralStrokeAccessibleHover: hcHighlight,
    colorNeutralStrokeAccessiblePressed: hcHighlight,
    colorNeutralStrokeAccessibleSelected: hcHighlight,
    colorNeutralStroke1: hcCanvasText,
    colorNeutralStroke1Hover: hcHighlight,
    colorNeutralStroke1Pressed: hcHighlight,
    colorNeutralStroke1Selected: hcHighlight,
    colorNeutralStroke2: hcCanvasText,
    colorNeutralStroke3: hcCanvasText,
    colorBrandStroke1: hcCanvasText,
    colorBrandStroke2: hcCanvas,
    colorCompoundBrandStroke: hcHighlight,
    colorCompoundBrandStrokeHover: hcHighlight,
    colorCompoundBrandStrokePressed: hcHighlight,
    colorNeutralStrokeDisabled: hcDisabled,
    colorTransparentStroke: hcCanvasText,
    colorTransparentStrokeInteractive: hcHighlight,
    colorTransparentStrokeDisabled: hcDisabled,
    colorStrokeFocus1: hcCanvas,
    colorStrokeFocus2: hcHighlight,
    colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',
    colorNeutralShadowKey: 'rgba(0,0,0,0.28)',
    colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',
    colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',
    colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',
    colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',
    colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',
    colorBrandShadowKey: 'rgba(0,0,0,0.25)'
  };
};
export var colorPaletteTokens = /*#__PURE__*/Object.keys(sharedColors).reduce(function (acc, sharedColor) {
  var _a;

  var color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  var sharedColorTokens = (_a = {}, _a["colorPalette" + color + "Background1"] = white, _a["colorPalette" + color + "Background2"] = black, _a["colorPalette" + color + "Background3"] = white, _a["colorPalette" + color + "Foreground1"] = black, _a["colorPalette" + color + "Foreground2"] = white, _a["colorPalette" + color + "Foreground3"] = white, _a["colorPalette" + color + "BorderActive"] = hcHighlight, _a["colorPalette" + color + "Border2"] = white, _a);
  return __assign(__assign({}, acc), sharedColorTokens);
}, {});
//# sourceMappingURL=highContrast.js.map