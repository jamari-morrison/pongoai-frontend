"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorPaletteTokens = exports.generateColorTokens = void 0;

var tslib_1 = /*#__PURE__*/require("tslib");

var colors_1 = /*#__PURE__*/require("../global/colors");

var generateColorTokens = function () {
  return {
    colorNeutralForeground1: colors_1.hcCanvasText,
    colorNeutralForeground2: colors_1.hcCanvasText,
    colorNeutralForeground2Hover: colors_1.hcHighlightText,
    colorNeutralForeground2Pressed: colors_1.hcHighlightText,
    colorNeutralForeground2Selected: colors_1.hcHighlightText,
    colorNeutralForeground2BrandHover: colors_1.hcHighlightText,
    colorNeutralForeground2BrandPressed: colors_1.hcHighlightText,
    colorNeutralForeground2BrandSelected: colors_1.hcHighlightText,
    colorNeutralForeground3: colors_1.hcCanvasText,
    colorNeutralForeground3Hover: colors_1.hcHighlightText,
    colorNeutralForeground3Pressed: colors_1.hcHighlightText,
    colorNeutralForeground3Selected: colors_1.hcHighlightText,
    colorNeutralForeground3BrandHover: colors_1.hcHighlightText,
    colorNeutralForeground3BrandPressed: colors_1.hcHighlightText,
    colorNeutralForeground3BrandSelected: colors_1.hcHighlightText,
    colorNeutralForeground4: colors_1.hcCanvasText,
    colorNeutralForegroundDisabled: colors_1.hcDisabled,
    colorBrandForegroundLink: colors_1.hcHyperlink,
    colorBrandForegroundLinkHover: colors_1.hcHyperlink,
    colorBrandForegroundLinkPressed: colors_1.hcHyperlink,
    colorBrandForegroundLinkSelected: colors_1.hcHyperlink,
    colorCompoundBrandForeground1: colors_1.hcHighlight,
    colorCompoundBrandForeground1Hover: colors_1.hcHighlight,
    colorCompoundBrandForeground1Pressed: colors_1.hcHighlight,
    colorBrandForeground1: colors_1.hcCanvasText,
    colorBrandForeground2: colors_1.hcButtonText,
    colorNeutralForegroundInverted: colors_1.hcCanvas,
    colorNeutralForegroundOnBrand: colors_1.hcButtonText,
    colorNeutralForegroundInvertedLink: colors_1.hcHyperlink,
    colorNeutralForegroundInvertedLinkHover: colors_1.hcHyperlink,
    colorNeutralForegroundInvertedLinkPressed: colors_1.hcHyperlink,
    colorNeutralForegroundInvertedLinkSelected: colors_1.hcHyperlink,
    colorNeutralBackground1: colors_1.hcCanvas,
    colorNeutralBackground1Hover: colors_1.hcHighlight,
    colorNeutralBackground1Pressed: colors_1.hcHighlight,
    colorNeutralBackground1Selected: colors_1.hcHighlight,
    colorNeutralBackground2: colors_1.hcCanvas,
    colorNeutralBackground2Hover: colors_1.hcHighlight,
    colorNeutralBackground2Pressed: colors_1.hcHighlight,
    colorNeutralBackground2Selected: colors_1.hcHighlight,
    colorNeutralBackground3: colors_1.hcCanvas,
    colorNeutralBackground3Hover: colors_1.hcHighlight,
    colorNeutralBackground3Pressed: colors_1.hcHighlight,
    colorNeutralBackground3Selected: colors_1.hcHighlight,
    colorNeutralBackground4: colors_1.hcCanvas,
    colorNeutralBackground4Hover: colors_1.hcHighlight,
    colorNeutralBackground4Pressed: colors_1.hcHighlight,
    colorNeutralBackground4Selected: colors_1.hcHighlight,
    colorNeutralBackground5: colors_1.hcCanvas,
    colorNeutralBackground5Hover: colors_1.hcHighlight,
    colorNeutralBackground5Pressed: colors_1.hcHighlight,
    colorNeutralBackground5Selected: colors_1.hcHighlight,
    colorNeutralBackground6: colors_1.hcCanvas,
    colorNeutralBackgroundInverted: colors_1.hcCanvasText,
    colorSubtleBackground: 'transparent',
    colorSubtleBackgroundHover: colors_1.hcHighlight,
    colorSubtleBackgroundPressed: colors_1.hcHighlight,
    colorSubtleBackgroundSelected: colors_1.hcHighlight,
    colorTransparentBackground: 'transparent',
    colorTransparentBackgroundHover: colors_1.hcHighlight,
    colorTransparentBackgroundPressed: colors_1.hcHighlight,
    colorTransparentBackgroundSelected: colors_1.hcHighlight,
    colorNeutralBackgroundDisabled: colors_1.hcCanvas,
    colorNeutralStencil1: colors_1.grey[8],
    colorNeutralStencil2: colors_1.grey[52],
    colorBrandBackground: colors_1.hcButtonFace,
    colorBrandBackgroundHover: colors_1.hcHighlight,
    colorBrandBackgroundPressed: colors_1.hcHighlight,
    colorBrandBackgroundSelected: colors_1.hcHighlight,
    colorCompoundBrandBackground: colors_1.hcHighlight,
    colorCompoundBrandBackgroundHover: colors_1.hcHighlight,
    colorCompoundBrandBackgroundPressed: colors_1.hcHighlight,
    colorBrandBackgroundStatic: colors_1.hcCanvas,
    colorBrandBackground2: colors_1.hcButtonFace,
    colorNeutralStrokeAccessible: colors_1.hcCanvasText,
    colorNeutralStrokeAccessibleHover: colors_1.hcHighlight,
    colorNeutralStrokeAccessiblePressed: colors_1.hcHighlight,
    colorNeutralStrokeAccessibleSelected: colors_1.hcHighlight,
    colorNeutralStroke1: colors_1.hcCanvasText,
    colorNeutralStroke1Hover: colors_1.hcHighlight,
    colorNeutralStroke1Pressed: colors_1.hcHighlight,
    colorNeutralStroke1Selected: colors_1.hcHighlight,
    colorNeutralStroke2: colors_1.hcCanvasText,
    colorNeutralStroke3: colors_1.hcCanvasText,
    colorBrandStroke1: colors_1.hcCanvasText,
    colorBrandStroke2: colors_1.hcCanvas,
    colorCompoundBrandStroke: colors_1.hcHighlight,
    colorCompoundBrandStrokeHover: colors_1.hcHighlight,
    colorCompoundBrandStrokePressed: colors_1.hcHighlight,
    colorNeutralStrokeDisabled: colors_1.hcDisabled,
    colorTransparentStroke: colors_1.hcCanvasText,
    colorTransparentStrokeInteractive: colors_1.hcHighlight,
    colorTransparentStrokeDisabled: colors_1.hcDisabled,
    colorStrokeFocus1: colors_1.hcCanvas,
    colorStrokeFocus2: colors_1.hcHighlight,
    colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',
    colorNeutralShadowKey: 'rgba(0,0,0,0.28)',
    colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',
    colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',
    colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',
    colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',
    colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',
    colorBrandShadowKey: 'rgba(0,0,0,0.25)'
  };
};

exports.generateColorTokens = generateColorTokens;
exports.colorPaletteTokens = /*#__PURE__*/Object.keys(colors_1.sharedColors).reduce(function (acc, sharedColor) {
  var _a;

  var color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  var sharedColorTokens = (_a = {}, _a["colorPalette" + color + "Background1"] = colors_1.white, _a["colorPalette" + color + "Background2"] = colors_1.black, _a["colorPalette" + color + "Background3"] = colors_1.white, _a["colorPalette" + color + "Foreground1"] = colors_1.black, _a["colorPalette" + color + "Foreground2"] = colors_1.white, _a["colorPalette" + color + "Foreground3"] = colors_1.white, _a["colorPalette" + color + "BorderActive"] = colors_1.hcHighlight, _a["colorPalette" + color + "Border2"] = colors_1.white, _a);
  return tslib_1.__assign(tslib_1.__assign({}, acc), sharedColorTokens);
}, {});
//# sourceMappingURL=highContrast.js.map