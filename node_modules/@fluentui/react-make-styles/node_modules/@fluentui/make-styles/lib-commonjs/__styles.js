"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__styles = void 0;

var reduceToClassNameForSlots_1 = /*#__PURE__*/require("./runtime/reduceToClassNameForSlots");
/**
 * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.
 *
 * @internal
 */


function __styles(classesMapBySlot, cssRules) {
  var insertionCache = {};
  var ltrClassNamesForSlots = null;
  var rtlClassNamesForSlots = null;

  function computeClasses(options) {
    var dir = options.dir,
        renderer = options.renderer;
    var isLTR = dir === 'ltr'; // As RTL classes are different they should have a different cache key for insertion

    var rendererId = isLTR ? renderer.id : renderer.id + 'r';

    if (isLTR) {
      if (ltrClassNamesForSlots === null) {
        ltrClassNamesForSlots = reduceToClassNameForSlots_1.reduceToClassNameForSlots(classesMapBySlot, dir);
      }
    } else {
      if (rtlClassNamesForSlots === null) {
        rtlClassNamesForSlots = reduceToClassNameForSlots_1.reduceToClassNameForSlots(classesMapBySlot, dir);
      }
    }

    if (insertionCache[rendererId] === undefined) {
      renderer.insertCSSRules(cssRules);
      insertionCache[rendererId] = true;
    }

    return isLTR ? ltrClassNamesForSlots : rtlClassNamesForSlots;
  }

  return computeClasses;
}

exports.__styles = __styles;
//# sourceMappingURL=__styles.js.map