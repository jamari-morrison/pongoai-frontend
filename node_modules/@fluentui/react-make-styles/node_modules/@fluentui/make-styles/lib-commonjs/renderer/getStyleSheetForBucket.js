"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getStyleSheetForBucket = exports.styleBucketOrdering = void 0;
/**
 * Ordered style buckets using their short pseudo name.
 *
 * @private
 */

exports.styleBucketOrdering = [// catch-all
'd', // link
'l', // visited
'v', // focus-within
'w', // focus
'f', // focus-visible
'i', // hover
'h', // active
'a', // keyframes
'k', // at-rules
't'];
/**
 * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.
 */

function getStyleSheetForBucket(bucketName, target, renderer) {
  if (!renderer.styleElements[bucketName]) {
    var currentBucketIndex = exports.styleBucketOrdering.indexOf(bucketName) + 1;
    var nextBucketFromCache = null; // Find the next bucket which we will add our new style bucket before.

    for (; currentBucketIndex < exports.styleBucketOrdering.length; currentBucketIndex++) {
      var nextBucket = renderer.styleElements[exports.styleBucketOrdering[currentBucketIndex]];

      if (nextBucket) {
        nextBucketFromCache = nextBucket;
        break;
      }
    }

    var tag = target.createElement('style');
    tag.dataset.makeStylesBucket = bucketName;
    renderer.styleElements[bucketName] = tag;
    target.head.insertBefore(tag, nextBucketFromCache);
  }

  return renderer.styleElements[bucketName].sheet;
}

exports.getStyleSheetForBucket = getStyleSheetForBucket;
//# sourceMappingURL=getStyleSheetForBucket.js.map