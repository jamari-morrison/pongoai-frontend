"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compileKeyframesCSS = exports.compileKeyframeRule = void 0;

var stylis_1 = /*#__PURE__*/require("stylis");

var cssifyObject_1 = /*#__PURE__*/require("./utils/cssifyObject");

function compileKeyframeRule(keyframeObject) {
  var css = ''; // eslint-disable-next-line guard-for-in

  for (var percentage in keyframeObject) {
    css += percentage + "{" + cssifyObject_1.cssifyObject(keyframeObject[percentage]) + "}";
  }

  return css;
}

exports.compileKeyframeRule = compileKeyframeRule;
/**
 * Creates CSS rules for insertion from passed CSS.
 */

function compileKeyframesCSS(keyframeName, keyframeCSS) {
  var cssRule = "@keyframes " + keyframeName + " {" + keyframeCSS + "}";
  var rules = [];
  stylis_1.serialize(stylis_1.compile(cssRule), stylis_1.middleware([stylis_1.prefixer, stylis_1.stringify, // ðŸ’¡ we are using `.insertRule()` API for DOM operations, which does not support
  // insertion of multiple CSS rules in a single call. `rulesheet` plugin extracts
  // individual rules to be used with this API
  stylis_1.rulesheet(function (rule) {
    return rules.push(rule);
  })]));
  return rules;
}

exports.compileKeyframesCSS = compileKeyframesCSS;
//# sourceMappingURL=compileKeyframeCSS.js.map