import { __spreadArrays } from "tslib";
import * as prettier from 'prettier';
export var makeStylesRendererSerializer = {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  test: function (value) {
    return typeof value.styleElements === 'object';
  },
  print: function (renderer) {
    var rules = Object.keys(renderer.styleElements).reduce(function (acc, styleEl) {
      var styleElement = renderer.styleElements[styleEl];

      if (styleElement) {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        var cssRules = Array.from(styleElement.sheet.cssRules);
        return __spreadArrays(acc, cssRules.map(function (rule) {
          return rule.cssText;
        }));
      }

      return acc;
    }, []);
    return prettier.format(rules.join('\n'), {
      parser: 'css'
    }).trim();
  }
};
export var makeStylesRulesSerializer = {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  test: function (value) {
    return Array.isArray(value) && value.length === 2;
  },
  print: function (value) {
    var cssRulesByBucket = value[1];
    return Object.keys(cssRulesByBucket).reduce(function (acc, styleBucketName) {
      var rules = cssRulesByBucket[styleBucketName];
      return prettier.format(acc + rules.join(''), {
        parser: 'css'
      }).trim();
    }, '');
  }
};
//# sourceMappingURL=snapshotSerializer.js.map