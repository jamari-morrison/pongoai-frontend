import { compile, middleware, serialize, rulesheet, stringify, prefixer } from 'stylis';
import { cssifyObject } from './utils/cssifyObject';
export function compileKeyframeRule(keyframeObject) {
  var css = ''; // eslint-disable-next-line guard-for-in

  for (var percentage in keyframeObject) {
    css += percentage + "{" + cssifyObject(keyframeObject[percentage]) + "}";
  }

  return css;
}
/**
 * Creates CSS rules for insertion from passed CSS.
 */

export function compileKeyframesCSS(keyframeName, keyframeCSS) {
  var cssRule = "@keyframes " + keyframeName + " {" + keyframeCSS + "}";
  var rules = [];
  serialize(compile(cssRule), middleware([prefixer, stringify, // ðŸ’¡ we are using `.insertRule()` API for DOM operations, which does not support
  // insertion of multiple CSS rules in a single call. `rulesheet` plugin extracts
  // individual rules to be used with this API
  rulesheet(function (rule) {
    return rules.push(rule);
  })]));
  return rules;
}
//# sourceMappingURL=compileKeyframeCSS.js.map