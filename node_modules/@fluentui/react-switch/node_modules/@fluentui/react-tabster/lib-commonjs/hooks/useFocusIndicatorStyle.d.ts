import type { Theme } from '@fluentui/react-theme';
import type { MakeStyles, MakeStylesStyleRule } from '@fluentui/make-styles';
export declare type FocusOutlineOffset = Record<'top' | 'bottom' | 'left' | 'right', string>;
export declare type FocusOutlineStyleOptions = {
    /**
     * Only property not supported by the native CSS `outline`, if this is no longer needed
     * we can just go native instead
     */
    outlineRadius: string;
    outlineColor: string;
    outlineWidth: string;
    outlineOffset?: string | FocusOutlineOffset;
};
export interface CreateFocusIndicatorStyleRuleOptions {
    selector?: 'focus' | 'focus-within';
}
/**
 * NOTE: The element with the focus outline needs to have `position: relative` so that the
 * pseudo element can be properly positioned.
 *
 * @param theme - Theme used in @see makeStyles
 * @param options - Configure the style of the focus outline
 * @returns focus outline styles object for @see makeStyles
 */
export declare const createFocusOutlineStyle: (theme: Theme, options?: {
    style: Partial<FocusOutlineStyleOptions>;
} & CreateFocusIndicatorStyleRuleOptions) => MakeStyles;
/**
 * Creates a style rule for @see makeStyles that includes the necessary selectors for focus.
 * Should be used only when @see createFocusOutlineStyle does not fit requirements
 *
 * @param rule - styling applied on focus, defaults to @see getDefaultFocusOutlineStyes
 */
export declare const createCustomFocusIndicatorStyle: (rule: MakeStylesStyleRule<Theme>, options?: CreateFocusIndicatorStyleRuleOptions) => MakeStylesStyleRule<Theme>;
