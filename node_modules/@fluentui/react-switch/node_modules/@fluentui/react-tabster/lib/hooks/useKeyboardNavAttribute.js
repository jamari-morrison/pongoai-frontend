import { createKeyborg } from 'keyborg';
import { useEffect, useMemo, useRef } from 'react';
import { KEYBOARD_NAV_ATTRIBUTE } from '../symbols';
import { useFluent } from '@fluentui/react-shared-contexts';
/**
 * instantiates keyborg and add attribute to ensure focus indicator synced to keyborg logic
 */

export function useKeyboardNavAttribute() {
  var targetDocument = useFluent().targetDocument;
  var keyborg = useMemo(function () {
    return targetDocument && createKeyborg(targetDocument.defaultView);
  }, [targetDocument]);
  var ref = useRef(null);
  useEffect(function () {
    if (keyborg) {
      setBooleanAttribute(ref, KEYBOARD_NAV_ATTRIBUTE, keyborg.isNavigatingWithKeyboard());

      var cb_1 = function (next) {
        setBooleanAttribute(ref, KEYBOARD_NAV_ATTRIBUTE, next);
      };

      keyborg.subscribe(cb_1);
      return function () {
        return keyborg.unsubscribe(cb_1);
      };
    }
  }, [keyborg]);
  return ref;
}

function setBooleanAttribute(elementRef, attribute, value) {
  if (!elementRef.current) {
    return;
  }

  if (value) {
    elementRef.current.setAttribute(attribute, '');
  } else {
    elementRef.current.removeAttribute(attribute);
  }
}
//# sourceMappingURL=useKeyboardNavAttribute.js.map