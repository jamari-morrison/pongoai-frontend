import type { ComponentProps } from '@fluentui/react-utilities';
import type { ComponentState } from '@fluentui/react-utilities';
import type { ForwardRefComponent } from '@fluentui/react-utilities';
import type { IntrinsicShorthandProps } from '@fluentui/react-utilities';
import * as React_2 from 'react';

/**
 * Render the final JSX of Switch
 */
export declare const renderSwitch: (state: SwitchState) => JSX.Element;

/**
 * The Switch control enables users to trigger an option on or off through pressing on the component.
 */
export declare const Switch: ForwardRefComponent<SwitchProps>;

export declare interface SwitchCommons {
    /**
     * The starting value for a uncontrolled Switch. If `true` then the Switch will be enabled.
     * Mutually exclusive with `checked` prop.
     *
     * @default false
     */
    defaultChecked?: boolean;
    /**
     * The current value for a controlled Switch. If `true` then the Switch will be enabled.
     * Mutually exclusive with `defaultChecked` prop.
     */
    checked?: boolean;
    /**
     * Whether the Switch should be disabled.
     *
     * @default false
     */
    disabled?: boolean;
    /**
     * Callback to be called when the `checked` value changes.
     */
    onChange?: (ev: React_2.PointerEvent<HTMLDivElement> | React_2.KeyboardEvent<HTMLDivElement>, data: {
        checked: boolean;
    }) => void;
}

export declare interface SwitchProps extends Omit<ComponentProps<SwitchSlots>, 'onChange'>, SwitchCommons {
}

/**
 * Array of all shorthand properties listed in SwitchSlots
 */
export declare const switchShorthandProps: (keyof SwitchSlots)[];

export declare type SwitchSlots = {
    /**
     * The root of the Switch.
     */
    root: IntrinsicShorthandProps<'div'>;
    /**
     * The bar indicating the status of the Switch.
     */
    track: IntrinsicShorthandProps<'div'>;
    /**
     * The wrapper around the thumb. It is used as the active area for the thumb to position itself.
     */
    thumbWrapper: IntrinsicShorthandProps<'div'>;
    /**
     * The circular icon indicating the status of the Switch.
     */
    thumb: IntrinsicShorthandProps<'div'>;
    /**
     * The hidden input that handles the Switch's internal functionality.
     */
    input: IntrinsicShorthandProps<'input'>;
    /**
     * The area in which the Switch's rail allows for the thumb to be dragged.
     */
    activeRail: IntrinsicShorthandProps<'div'>;
};

export declare interface SwitchState extends ComponentState<SwitchSlots>, SwitchCommons {
}

/**
 * Given user props, returns state and render function for a Switch.
 */
export declare const useSwitch: (props: SwitchProps, ref: React_2.Ref<HTMLElement>) => SwitchState;

/**
 * Apply styling to the Switch slots based on the state
 */
export declare const useSwitchStyles: (state: SwitchState) => SwitchState;

export { }
