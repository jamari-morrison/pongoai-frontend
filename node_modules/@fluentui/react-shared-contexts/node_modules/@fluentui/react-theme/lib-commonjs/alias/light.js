"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorPaletteTokens = exports.generateColorTokens = void 0;

var tslib_1 = /*#__PURE__*/require("tslib");

var colors_1 = /*#__PURE__*/require("../global/colors");

var generateColorTokens = function (brand) {
  return {
    colorNeutralForeground1: colors_1.grey[14],
    colorNeutralForeground2: colors_1.grey[26],
    colorNeutralForeground2Hover: colors_1.grey[14],
    colorNeutralForeground2Pressed: colors_1.grey[14],
    colorNeutralForeground2Selected: colors_1.grey[14],
    colorNeutralForeground2BrandHover: brand.primary,
    colorNeutralForeground2BrandPressed: brand.shade10,
    colorNeutralForeground2BrandSelected: brand.primary,
    colorNeutralForeground3: colors_1.grey[38],
    colorNeutralForeground3Hover: colors_1.grey[26],
    colorNeutralForeground3Pressed: colors_1.grey[26],
    colorNeutralForeground3Selected: colors_1.grey[26],
    colorNeutralForeground3BrandHover: brand.primary,
    colorNeutralForeground3BrandPressed: brand.shade10,
    colorNeutralForeground3BrandSelected: brand.primary,
    colorNeutralForeground4: colors_1.grey[44],
    colorNeutralForegroundDisabled: colors_1.grey[74],
    colorBrandForegroundLink: brand.shade10,
    colorBrandForegroundLinkHover: brand.shade20,
    colorBrandForegroundLinkPressed: brand.shade40,
    colorBrandForegroundLinkSelected: brand.shade10,
    colorCompoundBrandForeground1: brand.primary,
    colorCompoundBrandForeground1Hover: brand.shade10,
    colorCompoundBrandForeground1Pressed: brand.shade20,
    colorBrandForeground1: brand.primary,
    colorBrandForeground2: brand.shade10,
    colorNeutralForegroundInverted: colors_1.white,
    colorNeutralForegroundOnBrand: colors_1.white,
    colorNeutralForegroundInvertedLink: colors_1.white,
    colorNeutralForegroundInvertedLinkHover: colors_1.white,
    colorNeutralForegroundInvertedLinkPressed: colors_1.white,
    colorNeutralForegroundInvertedLinkSelected: colors_1.white,
    colorNeutralBackground1: colors_1.white,
    colorNeutralBackground1Hover: colors_1.grey[96],
    colorNeutralBackground1Pressed: colors_1.grey[88],
    colorNeutralBackground1Selected: colors_1.grey[92],
    colorNeutralBackground2: colors_1.grey[98],
    colorNeutralBackground2Hover: colors_1.grey[94],
    colorNeutralBackground2Pressed: colors_1.grey[86],
    colorNeutralBackground2Selected: colors_1.grey[90],
    colorNeutralBackground3: colors_1.grey[96],
    colorNeutralBackground3Hover: colors_1.grey[92],
    colorNeutralBackground3Pressed: colors_1.grey[84],
    colorNeutralBackground3Selected: colors_1.grey[88],
    colorNeutralBackground4: colors_1.grey[94],
    colorNeutralBackground4Hover: colors_1.grey[98],
    colorNeutralBackground4Pressed: colors_1.grey[96],
    colorNeutralBackground4Selected: colors_1.white,
    colorNeutralBackground5: colors_1.grey[92],
    colorNeutralBackground5Hover: colors_1.grey[96],
    colorNeutralBackground5Pressed: colors_1.grey[94],
    colorNeutralBackground5Selected: colors_1.grey[98],
    colorNeutralBackground6: colors_1.grey[90],
    colorNeutralBackgroundInverted: colors_1.grey[38],
    colorSubtleBackground: 'transparent',
    colorSubtleBackgroundHover: colors_1.grey[96],
    colorSubtleBackgroundPressed: colors_1.grey[88],
    colorSubtleBackgroundSelected: colors_1.grey[92],
    colorTransparentBackground: 'transparent',
    colorTransparentBackgroundHover: 'transparent',
    colorTransparentBackgroundPressed: 'transparent',
    colorTransparentBackgroundSelected: 'transparent',
    colorNeutralBackgroundDisabled: colors_1.grey[94],
    colorNeutralStencil1: colors_1.grey[90],
    colorNeutralStencil2: colors_1.grey[98],
    colorBrandBackground: brand.primary,
    colorBrandBackgroundHover: brand.shade10,
    colorBrandBackgroundPressed: brand.shade40,
    colorBrandBackgroundSelected: brand.shade20,
    colorCompoundBrandBackground: brand.primary,
    colorCompoundBrandBackgroundHover: brand.shade10,
    colorCompoundBrandBackgroundPressed: brand.shade20,
    colorBrandBackgroundStatic: brand.primary,
    colorBrandBackground2: brand.tint60,
    colorNeutralStrokeAccessible: colors_1.grey[38],
    colorNeutralStrokeAccessibleHover: colors_1.grey[34],
    colorNeutralStrokeAccessiblePressed: colors_1.grey[30],
    colorNeutralStrokeAccessibleSelected: brand.primary,
    colorNeutralStroke1: colors_1.grey[82],
    colorNeutralStroke1Hover: colors_1.grey[78],
    colorNeutralStroke1Pressed: colors_1.grey[70],
    colorNeutralStroke1Selected: colors_1.grey[74],
    colorNeutralStroke2: colors_1.grey[88],
    colorNeutralStroke3: colors_1.grey[94],
    colorBrandStroke1: brand.primary,
    colorBrandStroke2: brand.tint40,
    colorCompoundBrandStroke: brand.primary,
    colorCompoundBrandStrokeHover: brand.shade10,
    colorCompoundBrandStrokePressed: brand.shade20,
    colorNeutralStrokeDisabled: colors_1.grey[88],
    colorTransparentStroke: 'transparent',
    colorTransparentStrokeInteractive: 'transparent',
    colorTransparentStrokeDisabled: 'transparent',
    colorStrokeFocus1: colors_1.white,
    colorStrokeFocus2: colors_1.black,
    colorNeutralShadowAmbient: 'rgba(0,0,0,0.12)',
    colorNeutralShadowKey: 'rgba(0,0,0,0.14)',
    colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.06)',
    colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.07)',
    colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.20)',
    colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.24)',
    colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',
    colorBrandShadowKey: 'rgba(0,0,0,0.25)'
  };
};

exports.generateColorTokens = generateColorTokens;
exports.colorPaletteTokens = /*#__PURE__*/Object.keys(colors_1.sharedColors).reduce(function (acc, sharedColor) {
  var _a;

  var color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  var sharedColorTokens = (_a = {}, _a["colorPalette" + color + "Background1"] = colors_1.sharedColors[sharedColor].tint60, _a["colorPalette" + color + "Background2"] = colors_1.sharedColors[sharedColor].tint40, _a["colorPalette" + color + "Background3"] = colors_1.sharedColors[sharedColor].primary, _a["colorPalette" + color + "Foreground1"] = colors_1.sharedColors[sharedColor].shade10, _a["colorPalette" + color + "Foreground2"] = colors_1.sharedColors[sharedColor].shade30, _a["colorPalette" + color + "Foreground3"] = colors_1.sharedColors[sharedColor].primary, _a["colorPalette" + color + "BorderActive"] = colors_1.sharedColors[sharedColor].primary, _a["colorPalette" + color + "Border2"] = colors_1.sharedColors[sharedColor].primary, _a);
  return tslib_1.__assign(tslib_1.__assign({}, acc), sharedColorTokens);
}, {});
//# sourceMappingURL=light.js.map