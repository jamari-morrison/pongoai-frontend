import * as React from 'react';
import { Button } from './index';
import { Header2 } from '@pongoai/react-text';
import { makeStyles } from '@fluentui/react-make-styles';
var useStyles = makeStyles({
    root: {
        display: 'inline-flex',
        flexDirection: 'column',
        gap: '10px',
    },
    row: {
        display: 'inline-flex',
        flexDirection: 'row',
        gap: '10px',
    },
});
export var BasicButtonExample = function () {
    var styles = useStyles();
    return (React.createElement("div", { className: styles.root },
        React.createElement(Header2, null, "Appearance"),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { appearance: "outline" }, "Outline"),
            React.createElement(Button, { appearance: "primary" }, "Primary"),
            React.createElement(Button, { appearance: "subtle" }, "Subtle"),
            React.createElement(Button, { appearance: "transparent" }, "Transparent")),
        React.createElement(Header2, null, "Disabled"),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { disabled: true }, "Outline"),
            React.createElement(Button, { appearance: "primary", disabled: true }, "Primary"),
            React.createElement(Button, { appearance: "subtle", disabled: true }, "Subtle"),
            React.createElement(Button, { appearance: "transparent", disabled: true }, "Transparent")),
        React.createElement(Header2, null, "Shape"),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { shape: "rounded" }, "Rounded"),
            React.createElement(Button, { shape: "circular" }, "Circular"),
            React.createElement(Button, { shape: "circle" }, "Circle"),
            React.createElement(Button, { shape: "square" }, "Square")),
        React.createElement(Header2, null, "Size"),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { size: "small" }, "Small"),
            React.createElement(Button, { size: "medium" }, "Medium"),
            React.createElement(Button, { size: "large" }, "Large"))));
};
export var ButtonColorExample = function () {
    var styles = useStyles();
    return (React.createElement("div", { className: styles.root },
        React.createElement(Header2, null, "Color"),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "inherit", appearance: "outline" }, "Inherit"),
            React.createElement(Button, { color: "inherit", appearance: "primary" }, "Inherit"),
            React.createElement(Button, { color: "inherit", appearance: "subtle" }, "Inherit"),
            React.createElement(Button, { color: "inherit", appearance: "transparent" }, "Inherit")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "brand", appearance: "outline" }, "Brand"),
            React.createElement(Button, { color: "brand", appearance: "primary" }, "Brand"),
            React.createElement(Button, { color: "brand", appearance: "subtle" }, "Brand"),
            React.createElement(Button, { color: "brand", appearance: "transparent" }, "Brand")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "secondary", appearance: "outline" }, "Secondary"),
            React.createElement(Button, { color: "secondary", appearance: "primary" }, "Secondary"),
            React.createElement(Button, { color: "secondary", appearance: "subtle" }, "Secondary"),
            React.createElement(Button, { color: "secondary", appearance: "transparent" }, "Secondary")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "success", appearance: "outline" }, "Success"),
            React.createElement(Button, { color: "success", appearance: "primary" }, "Success"),
            React.createElement(Button, { color: "success", appearance: "subtle" }, "Success"),
            React.createElement(Button, { color: "success", appearance: "transparent" }, "Success")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "error", appearance: "outline" }, "Error"),
            React.createElement(Button, { color: "error", appearance: "primary" }, "Error"),
            React.createElement(Button, { color: "error", appearance: "subtle" }, "Error"),
            React.createElement(Button, { color: "error", appearance: "transparent" }, "Error")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "social", appearance: "outline" }, "Social"),
            React.createElement(Button, { color: "social", appearance: "primary" }, "Social"),
            React.createElement(Button, { color: "social", appearance: "subtle" }, "Social"),
            React.createElement(Button, { color: "social", appearance: "transparent" }, "Social")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "warning", appearance: "outline" }, "Warning"),
            React.createElement(Button, { color: "warning", appearance: "primary" }, "Warning"),
            React.createElement(Button, { color: "warning", appearance: "subtle" }, "Warning"),
            React.createElement(Button, { color: "warning", appearance: "transparent" }, "Warning")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "info", appearance: "outline" }, "Info"),
            React.createElement(Button, { color: "info", appearance: "primary" }, "Info"),
            React.createElement(Button, { color: "info", appearance: "subtle" }, "Info"),
            React.createElement(Button, { color: "info", appearance: "transparent" }, "Info")),
        React.createElement(Header2, null, "Disabled"),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "inherit", appearance: "outline", disabled: true }, "Inherit"),
            React.createElement(Button, { color: "inherit", appearance: "primary", disabled: true }, "Inherit"),
            React.createElement(Button, { color: "inherit", appearance: "subtle", disabled: true }, "Inherit"),
            React.createElement(Button, { color: "inherit", appearance: "transparent", disabled: true }, "Inherit")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "brand", appearance: "outline", disabled: true }, "Brand"),
            React.createElement(Button, { color: "brand", appearance: "primary", disabled: true }, "Brand"),
            React.createElement(Button, { color: "brand", appearance: "subtle", disabled: true }, "Brand"),
            React.createElement(Button, { color: "brand", appearance: "transparent", disabled: true }, "Brand")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "secondary", appearance: "outline", disabled: true }, "Secondary"),
            React.createElement(Button, { color: "secondary", appearance: "primary", disabled: true }, "Secondary"),
            React.createElement(Button, { color: "secondary", appearance: "subtle", disabled: true }, "Secondary"),
            React.createElement(Button, { color: "secondary", appearance: "transparent", disabled: true }, "Secondary")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "success", appearance: "outline", disabled: true }, "Success"),
            React.createElement(Button, { color: "success", appearance: "primary", disabled: true }, "Success"),
            React.createElement(Button, { color: "success", appearance: "subtle", disabled: true }, "Success"),
            React.createElement(Button, { color: "success", appearance: "transparent", disabled: true }, "Success")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "error", appearance: "outline", disabled: true }, "Error"),
            React.createElement(Button, { color: "error", appearance: "primary", disabled: true }, "Error"),
            React.createElement(Button, { color: "error", appearance: "subtle", disabled: true }, "Error"),
            React.createElement(Button, { color: "error", appearance: "transparent", disabled: true }, "Error")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "social", appearance: "outline", disabled: true }, "Social"),
            React.createElement(Button, { color: "social", appearance: "primary", disabled: true }, "Social"),
            React.createElement(Button, { color: "social", appearance: "subtle", disabled: true }, "Social"),
            React.createElement(Button, { color: "social", appearance: "transparent", disabled: true }, "Social")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "warning", appearance: "outline", disabled: true }, "Warning"),
            React.createElement(Button, { color: "warning", appearance: "primary", disabled: true }, "Warning"),
            React.createElement(Button, { color: "warning", appearance: "subtle", disabled: true }, "Warning"),
            React.createElement(Button, { color: "warning", appearance: "transparent", disabled: true }, "Warning")),
        React.createElement("div", { className: styles.row },
            React.createElement(Button, { color: "info", appearance: "outline", disabled: true }, "Info"),
            React.createElement(Button, { color: "info", appearance: "primary", disabled: true }, "Info"),
            React.createElement(Button, { color: "info", appearance: "subtle", disabled: true }, "Info"),
            React.createElement(Button, { color: "info", appearance: "transparent", disabled: true }, "Info"))));
};
export default {
    title: 'Components/Button',
    component: Button,
};
//# sourceMappingURL=Button.stories.js.map