var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { getNativeElementProps } from '@fluentui/react-utilities';
import { useButtonState } from './useButtonState';
export var buttonShorthandProps = ['root'];
export var useButton = function (props, ref) {
    var as = props.as, _a = props.appearance, appearance = _a === void 0 ? 'outline' : _a, _b = props.color, color = _b === void 0 ? 'inherit' : _b, _c = props.disabled, disabled = _c === void 0 ? false : _c, _d = props.size, size = _d === void 0 ? 'medium' : _d, _e = props.shape, shape = _e === void 0 ? 'rounded' : _e;
    var state = {
        appearance: appearance,
        disabled: disabled,
        shape: shape,
        size: size,
        color: color,
        components: {
            root: 'button',
        },
        root: getNativeElementProps(as || 'button', __assign({ ref: ref, required: true, type: 'button' }, props)),
    };
    useButtonState(state);
    return state;
};
//# sourceMappingURL=useButton.js.map