import * as React from 'react';
import type { IconProps } from '../Icon';
export declare const createIcon: (defaultProps: IconProps, displayName: string) => React.MemoExoticComponent<import("react").ForwardRefExoticComponent<Omit<{
    root?: import("@fluentui/react-utilities").ShorthandProps<{
        as?: "span" | undefined;
    } & Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof React.HTMLAttributes<HTMLSpanElement>> & {
        ref?: ((instance: HTMLSpanElement | null) => void) | React.RefObject<HTMLSpanElement> | null | undefined;
    } & {
        children?: React.ReactNode | import("@fluentui/react-utilities").ShorthandRenderFunction<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof React.HTMLAttributes<HTMLSpanElement>> & {
            ref?: ((instance: HTMLSpanElement | null) => void) | React.RefObject<HTMLSpanElement> | null | undefined;
        }>;
    }>;
}, "root"> & Omit<{
    as?: "span" | undefined;
} & Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof React.HTMLAttributes<HTMLSpanElement>> & {
    ref?: ((instance: HTMLSpanElement | null) => void) | React.RefObject<HTMLSpanElement> | null | undefined;
} & {
    children?: React.ReactNode | import("@fluentui/react-utilities").ShorthandRenderFunction<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof React.HTMLAttributes<HTMLSpanElement>> & {
        ref?: ((instance: HTMLSpanElement | null) => void) | React.RefObject<HTMLSpanElement> | null | undefined;
    }>;
}, "ref"> & import("../Icon").IconCommons & import("react").RefAttributes<HTMLSpanElement>>>;
//# sourceMappingURL=createIcon.d.ts.map