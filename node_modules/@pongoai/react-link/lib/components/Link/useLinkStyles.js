import { makeStyles, mergeClasses } from '@fluentui/react-make-styles';
const useRootStyles = makeStyles({
    root: (theme) => ({
        fontFamily: theme.fonts.fontFamily.base,
        fontSize: theme.fonts.fontSize[300],
        fontWeight: theme.fonts.fontWeight.regular,
        backgroundColor: 'transparent',
        border: 'none',
        boxSizing: 'border-box',
        display: 'inline',
        overflow: 'inherit',
        textOverflow: 'inherit',
        textDecoration: 'none',
        userSelect: 'text',
    }),
    disabled: (theme) => ({
        color: theme.palette.inheritDisabled,
        textDecoration: 'underline',
        cursor: 'not-allowed',
    }),
    enabled: (theme) => ({
        color: theme.palette.brand,
        cursor: 'pointer',
        ':hover': {
            color: theme.palette.brandHover,
            textDecoration: 'underline',
        },
        ':active': {
            color: theme.palette.brandPressed,
            textDecoration: 'underline',
        },
    }),
    strong: (theme) => ({
        fontWeight: theme.fonts.fontWeight.bold,
    }),
});
export const useLinkStyles = (state) => {
    const rootStyles = useRootStyles();
    state.root.className = mergeClasses(rootStyles.root, state.disabled ? rootStyles.disabled : rootStyles.enabled, state.root.className);
    return state;
};
//# sourceMappingURL=useLinkStyles.js.map