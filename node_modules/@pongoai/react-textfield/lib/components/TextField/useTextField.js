import { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';
import { useTextFieldState } from './useTextFieldState';
export const textFieldShorthandProps = [
    'root',
    'input',
    'inputWrapper',
    'textFieldLabel',
    'textFieldLegend',
    'textFieldHelperText',
    'textFieldSuffix',
    'textFieldPrefix',
    'textFieldWrapper',
    'textFieldBorder',
];
export const useTextField = (props, ref) => {
    const { defaultValue = '', value, autocomplete, disabled = false, error = false, appearance = 'standard', input, placeholder, required = false, label, number = false, helperText, suffix, prefix, inputWrapper, textFieldHelperText, textFieldSuffix, textFieldPrefix, textFieldLabel, textFieldLegend, textFieldBorder, textFieldWrapper, onChange, } = props;
    const state = {
        defaultValue,
        value,
        autocomplete,
        disabled,
        error,
        appearance,
        placeholder,
        number,
        suffix,
        prefix,
        helperText,
        required,
        label,
        onChange,
        root: getNativeElementProps('div', {
            ref,
            ...props,
        }),
        components: {
            root: 'div',
            textFieldBorder: 'fieldset',
            textFieldLegend: 'legend',
            textFieldHelperText: 'p',
            textFieldWrapper: 'div',
            textFieldLabel: 'label',
            textFieldSuffix: 'div',
            textFieldPrefix: 'div',
            inputWrapper: 'div',
            input: 'input',
        },
        textFieldBorder: resolveShorthand(textFieldBorder, { required: true }),
        textFieldLegend: resolveShorthand(textFieldLegend, { required: true }),
        textFieldWrapper: resolveShorthand(textFieldWrapper, { required: true }),
        textFieldSuffix: resolveShorthand(textFieldSuffix, { required: true }),
        textFieldPrefix: resolveShorthand(textFieldPrefix, { required: true }),
        textFieldLabel: resolveShorthand(textFieldLabel, { required: true }),
        textFieldHelperText: resolveShorthand(textFieldHelperText, { required: true }),
        inputWrapper: resolveShorthand(inputWrapper, { required: true }),
        input: resolveShorthand(input, {
            required: true,
            defaultProps: {
                type: number ? 'number' : 'text',
            },
        }),
    };
    useTextFieldState(state);
    return state;
};
//# sourceMappingURL=useTextField.js.map