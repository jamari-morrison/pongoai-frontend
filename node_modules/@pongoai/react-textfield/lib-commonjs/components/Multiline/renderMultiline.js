"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.renderMultiline = void 0;
const React = __importStar(require("react"));
const react_utilities_1 = require("@fluentui/react-utilities");
const useMultiline_1 = require("./useMultiline");
const renderMultiline = (state) => {
    const { slots, slotProps } = react_utilities_1.getSlots(state, useMultiline_1.multilineShorthandProps);
    return (React.createElement(slots.root, Object.assign({}, slotProps.root),
        React.createElement(slots.textFieldBorder, Object.assign({}, slotProps.textFieldBorder),
            state.label !== undefined && state.appearance === 'outlined' && (React.createElement(slots.textFieldLegend, Object.assign({}, slotProps.textFieldLegend),
                React.createElement("span", null, slotProps.textFieldLegend.children))),
            state.label !== undefined && React.createElement(slots.textFieldLabel, Object.assign({}, slotProps.textFieldLabel)),
            React.createElement(slots.textarea, Object.assign({}, slotProps.textarea, { "data-testid": "test-id" }))),
        state.helperText && React.createElement(slots.textFieldHelperText, Object.assign({}, slotProps.textFieldHelperText))));
};
exports.renderMultiline = renderMultiline;
//# sourceMappingURL=renderMultiline.js.map