import { black, blackAlpha, grey, white, whiteAlpha, sharedColors } from '../global/colors';
export const generateColorTokens = brand => ({
  colorNeutralForeground1: white,
  colorNeutralForeground1Hover: white,
  colorNeutralForeground1Pressed: white,
  colorNeutralForeground1Selected: white,
  colorNeutralForeground2: grey[84],
  colorNeutralForeground2Hover: white,
  colorNeutralForeground2Pressed: white,
  colorNeutralForeground2Selected: white,
  colorNeutralForeground2BrandHover: brand.tint20,
  colorNeutralForeground2BrandPressed: brand.tint10,
  colorNeutralForeground2BrandSelected: brand.tint20,
  colorNeutralForeground3: grey[68],
  colorNeutralForeground3Hover: grey[84],
  colorNeutralForeground3Pressed: grey[84],
  colorNeutralForeground3Selected: grey[84],
  colorNeutralForeground3BrandHover: brand.tint20,
  colorNeutralForeground3BrandPressed: brand.tint10,
  colorNeutralForeground3BrandSelected: brand.tint20,
  colorNeutralForeground4: grey[60],
  colorNeutralForegroundDisabled: grey[36],
  colorNeutralForegroundInvertedDisabled: whiteAlpha[40],
  colorBrandForegroundLink: brand.tint10,
  colorBrandForegroundLinkHover: brand.tint30,
  colorBrandForegroundLinkPressed: brand.tint20,
  colorBrandForegroundLinkSelected: brand.tint10,
  colorCompoundBrandForeground1: brand.tint10,
  colorCompoundBrandForeground1Hover: brand.tint20,
  colorCompoundBrandForeground1Pressed: brand.primary,
  colorBrandForeground1: brand.tint20,
  colorBrandForeground2: brand.tint30,
  colorNeutralForegroundInverted: white,
  colorNeutralForegroundInvertedHover: white,
  colorNeutralForegroundInvertedPressed: white,
  colorNeutralForegroundInvertedSelected: white,
  colorNeutralForegroundOnBrand: white,
  colorNeutralForegroundInvertedLink: white,
  colorNeutralForegroundInvertedLinkHover: white,
  colorNeutralForegroundInvertedLinkPressed: white,
  colorNeutralForegroundInvertedLinkSelected: white,
  colorBrandForegroundInverted: brand.tint20,
  colorBrandForegroundInvertedHover: brand.tint30,
  colorBrandForegroundInvertedPressed: brand.tint20,
  colorBrandForegroundOnLight: brand.primary,
  colorBrandForegroundOnLightHover: brand.shade10,
  colorBrandForegroundOnLightPressed: brand.shade30,
  colorBrandForegroundOnLightSelected: brand.shade20,
  colorNeutralBackground1: grey[16],
  colorNeutralBackground1Hover: grey[24],
  colorNeutralBackground1Pressed: grey[12],
  colorNeutralBackground1Selected: grey[22],
  colorNeutralBackground2: grey[12],
  colorNeutralBackground2Hover: grey[20],
  colorNeutralBackground2Pressed: grey[8],
  colorNeutralBackground2Selected: grey[18],
  colorNeutralBackground3: grey[8],
  colorNeutralBackground3Hover: grey[16],
  colorNeutralBackground3Pressed: grey[4],
  colorNeutralBackground3Selected: grey[14],
  colorNeutralBackground4: grey[4],
  colorNeutralBackground4Hover: grey[12],
  colorNeutralBackground4Pressed: black,
  colorNeutralBackground4Selected: grey[10],
  colorNeutralBackground5: black,
  colorNeutralBackground5Hover: grey[8],
  colorNeutralBackground5Pressed: grey[2],
  colorNeutralBackground5Selected: grey[6],
  colorNeutralBackground6: grey[20],
  colorNeutralBackgroundInverted: grey[24],
  colorSubtleBackground: 'transparent',
  colorSubtleBackgroundHover: grey[22],
  colorSubtleBackgroundPressed: grey[18],
  colorSubtleBackgroundSelected: grey[20],
  colorSubtleBackgroundLightAlphaHover: whiteAlpha[10],
  colorSubtleBackgroundLightAlphaPressed: whiteAlpha[5],
  colorSubtleBackgroundLightAlphaSelected: 'transparent',
  colorSubtleBackgroundInverted: 'transparent',
  colorSubtleBackgroundInvertedHover: blackAlpha[10],
  colorSubtleBackgroundInvertedPressed: blackAlpha[30],
  colorSubtleBackgroundInvertedSelected: blackAlpha[20],
  colorTransparentBackground: 'transparent',
  colorTransparentBackgroundHover: 'transparent',
  colorTransparentBackgroundPressed: 'transparent',
  colorTransparentBackgroundSelected: 'transparent',
  colorNeutralBackgroundDisabled: grey[8],
  colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],
  colorNeutralStencil1: grey[20],
  colorNeutralStencil2: grey[34],
  colorBrandBackground: brand.shade10,
  colorBrandBackgroundHover: brand.primary,
  colorBrandBackgroundPressed: brand.shade40,
  colorBrandBackgroundSelected: brand.shade20,
  colorCompoundBrandBackground: brand.tint10,
  colorCompoundBrandBackgroundHover: brand.tint20,
  colorCompoundBrandBackgroundPressed: brand.primary,
  colorBrandBackgroundStatic: brand.primary,
  colorBrandBackground2: brand.shade40,
  colorBrandBackgroundInverted: white,
  colorBrandBackgroundInvertedHover: brand.tint60,
  colorBrandBackgroundInvertedPressed: brand.tint40,
  colorBrandBackgroundInvertedSelected: brand.tint50,
  colorNeutralStrokeAccessible: grey[68],
  colorNeutralStrokeAccessibleHover: grey[74],
  colorNeutralStrokeAccessiblePressed: grey[70],
  colorNeutralStrokeAccessibleSelected: brand.tint20,
  colorNeutralStroke1: grey[40],
  colorNeutralStroke1Hover: grey[46],
  colorNeutralStroke1Pressed: grey[42],
  colorNeutralStroke1Selected: grey[44],
  colorNeutralStroke2: grey[32],
  colorNeutralStroke3: grey[24],
  colorNeutralStrokeOnBrand: grey[16],
  colorNeutralStrokeOnBrand2: white,
  colorNeutralStrokeOnBrand2Hover: white,
  colorNeutralStrokeOnBrand2Pressed: white,
  colorNeutralStrokeOnBrand2Selected: white,
  colorBrandStroke1: brand.tint10,
  colorBrandStroke2: brand.shade30,
  colorCompoundBrandStroke: brand.tint10,
  colorCompoundBrandStrokeHover: brand.tint20,
  colorCompoundBrandStrokePressed: brand.primary,
  colorNeutralStrokeDisabled: grey[26],
  colorNeutralStrokeInvertedDisabled: whiteAlpha[40],
  colorTransparentStroke: 'transparent',
  colorTransparentStrokeInteractive: 'transparent',
  colorTransparentStrokeDisabled: 'transparent',
  colorStrokeFocus1: black,
  colorStrokeFocus2: white,
  colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',
  colorNeutralShadowKey: 'rgba(0,0,0,0.28)',
  colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',
  colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',
  colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',
  colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',
  colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',
  colorBrandShadowKey: 'rgba(0,0,0,0.25)'
});
export const colorPaletteTokens = /*#__PURE__*/Object.keys(sharedColors).reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background1`]: sharedColors[sharedColor].shade40,
    [`colorPalette${color}Background2`]: sharedColors[sharedColor].shade30,
    [`colorPalette${color}Background3`]: sharedColors[sharedColor].primary,
    [`colorPalette${color}Foreground1`]: sharedColors[sharedColor].tint30,
    [`colorPalette${color}Foreground2`]: sharedColors[sharedColor].tint40,
    [`colorPalette${color}Foreground3`]: sharedColors[sharedColor].tint20,
    [`colorPalette${color}BorderActive`]: sharedColors[sharedColor].tint30,
    [`colorPalette${color}Border2`]: sharedColors[sharedColor].tint20
  };
  return { ...acc,
    ...sharedColorTokens
  };
}, {});
//# sourceMappingURL=dark.js.map