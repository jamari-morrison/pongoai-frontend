"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorPaletteTokens = exports.generateColorTokens = void 0;

const colors_1 = /*#__PURE__*/require("../global/colors");

const generateColorTokens = brand => ({
  colorNeutralForeground1: colors_1.white,
  colorNeutralForeground1Hover: colors_1.white,
  colorNeutralForeground1Pressed: colors_1.white,
  colorNeutralForeground1Selected: colors_1.white,
  colorNeutralForeground2: colors_1.grey[84],
  colorNeutralForeground2Hover: colors_1.white,
  colorNeutralForeground2Pressed: colors_1.white,
  colorNeutralForeground2Selected: colors_1.white,
  colorNeutralForeground2BrandHover: brand.tint20,
  colorNeutralForeground2BrandPressed: brand.tint10,
  colorNeutralForeground2BrandSelected: brand.tint20,
  colorNeutralForeground3: colors_1.grey[68],
  colorNeutralForeground3Hover: colors_1.grey[84],
  colorNeutralForeground3Pressed: colors_1.grey[84],
  colorNeutralForeground3Selected: colors_1.grey[84],
  colorNeutralForeground3BrandHover: brand.tint20,
  colorNeutralForeground3BrandPressed: brand.tint10,
  colorNeutralForeground3BrandSelected: brand.tint20,
  colorNeutralForeground4: colors_1.grey[60],
  colorNeutralForegroundDisabled: colors_1.grey[36],
  colorNeutralForegroundInvertedDisabled: colors_1.whiteAlpha[40],
  colorBrandForegroundLink: brand.tint10,
  colorBrandForegroundLinkHover: brand.tint30,
  colorBrandForegroundLinkPressed: brand.tint20,
  colorBrandForegroundLinkSelected: brand.tint10,
  colorCompoundBrandForeground1: brand.tint10,
  colorCompoundBrandForeground1Hover: brand.tint20,
  colorCompoundBrandForeground1Pressed: brand.primary,
  colorBrandForeground1: brand.tint20,
  colorBrandForeground2: brand.tint30,
  colorNeutralForegroundInverted: colors_1.white,
  colorNeutralForegroundInvertedHover: colors_1.white,
  colorNeutralForegroundInvertedPressed: colors_1.white,
  colorNeutralForegroundInvertedSelected: colors_1.white,
  colorNeutralForegroundOnBrand: colors_1.white,
  colorNeutralForegroundInvertedLink: colors_1.white,
  colorNeutralForegroundInvertedLinkHover: colors_1.white,
  colorNeutralForegroundInvertedLinkPressed: colors_1.white,
  colorNeutralForegroundInvertedLinkSelected: colors_1.white,
  colorBrandForegroundInverted: brand.tint20,
  colorBrandForegroundInvertedHover: brand.tint30,
  colorBrandForegroundInvertedPressed: brand.tint20,
  colorBrandForegroundOnLight: brand.primary,
  colorBrandForegroundOnLightHover: brand.shade10,
  colorBrandForegroundOnLightPressed: brand.shade30,
  colorBrandForegroundOnLightSelected: brand.shade20,
  colorNeutralBackground1: colors_1.grey[16],
  colorNeutralBackground1Hover: colors_1.grey[24],
  colorNeutralBackground1Pressed: colors_1.grey[12],
  colorNeutralBackground1Selected: colors_1.grey[22],
  colorNeutralBackground2: colors_1.grey[14],
  colorNeutralBackground2Hover: colors_1.grey[22],
  colorNeutralBackground2Pressed: colors_1.grey[10],
  colorNeutralBackground2Selected: colors_1.grey[20],
  colorNeutralBackground3: colors_1.grey[12],
  colorNeutralBackground3Hover: colors_1.grey[20],
  colorNeutralBackground3Pressed: colors_1.grey[8],
  colorNeutralBackground3Selected: colors_1.grey[18],
  colorNeutralBackground4: colors_1.grey[8],
  colorNeutralBackground4Hover: colors_1.grey[16],
  colorNeutralBackground4Pressed: colors_1.grey[4],
  colorNeutralBackground4Selected: colors_1.grey[14],
  colorNeutralBackground5: colors_1.grey[4],
  colorNeutralBackground5Hover: colors_1.grey[12],
  colorNeutralBackground5Pressed: colors_1.black,
  colorNeutralBackground5Selected: colors_1.grey[10],
  colorNeutralBackground6: colors_1.grey[20],
  colorNeutralBackgroundInverted: colors_1.grey[24],
  colorSubtleBackground: 'transparent',
  colorSubtleBackgroundHover: colors_1.grey[22],
  colorSubtleBackgroundPressed: colors_1.grey[18],
  colorSubtleBackgroundSelected: colors_1.grey[20],
  colorSubtleBackgroundLightAlphaHover: colors_1.whiteAlpha[10],
  colorSubtleBackgroundLightAlphaPressed: colors_1.whiteAlpha[5],
  colorSubtleBackgroundLightAlphaSelected: 'transparent',
  colorSubtleBackgroundInverted: 'transparent',
  colorSubtleBackgroundInvertedHover: colors_1.blackAlpha[10],
  colorSubtleBackgroundInvertedPressed: colors_1.blackAlpha[30],
  colorSubtleBackgroundInvertedSelected: colors_1.blackAlpha[20],
  colorTransparentBackground: 'transparent',
  colorTransparentBackgroundHover: 'transparent',
  colorTransparentBackgroundPressed: 'transparent',
  colorTransparentBackgroundSelected: 'transparent',
  colorNeutralBackgroundDisabled: colors_1.grey[8],
  colorNeutralBackgroundInvertedDisabled: colors_1.whiteAlpha[10],
  colorNeutralStencil1: colors_1.grey[20],
  colorNeutralStencil2: colors_1.grey[34],
  colorBrandBackground: brand.shade10,
  colorBrandBackgroundHover: brand.primary,
  colorBrandBackgroundPressed: brand.shade40,
  colorBrandBackgroundSelected: brand.shade20,
  colorCompoundBrandBackground: brand.tint10,
  colorCompoundBrandBackgroundHover: brand.tint20,
  colorCompoundBrandBackgroundPressed: brand.primary,
  colorBrandBackgroundStatic: brand.primary,
  colorBrandBackground2: brand.shade40,
  colorBrandBackgroundInverted: colors_1.white,
  colorBrandBackgroundInvertedHover: brand.tint60,
  colorBrandBackgroundInvertedPressed: brand.tint40,
  colorBrandBackgroundInvertedSelected: brand.tint50,
  colorNeutralStrokeAccessible: colors_1.grey[68],
  colorNeutralStrokeAccessibleHover: colors_1.grey[74],
  colorNeutralStrokeAccessiblePressed: colors_1.grey[70],
  colorNeutralStrokeAccessibleSelected: brand.tint20,
  colorNeutralStroke1: colors_1.grey[40],
  colorNeutralStroke1Hover: colors_1.grey[46],
  colorNeutralStroke1Pressed: colors_1.grey[42],
  colorNeutralStroke1Selected: colors_1.grey[44],
  colorNeutralStroke2: colors_1.grey[32],
  colorNeutralStroke3: colors_1.grey[24],
  colorNeutralStrokeOnBrand: colors_1.grey[16],
  colorNeutralStrokeOnBrand2: colors_1.white,
  colorNeutralStrokeOnBrand2Hover: colors_1.white,
  colorNeutralStrokeOnBrand2Pressed: colors_1.white,
  colorNeutralStrokeOnBrand2Selected: colors_1.white,
  colorBrandStroke1: brand.tint10,
  colorBrandStroke2: brand.shade30,
  colorCompoundBrandStroke: brand.tint10,
  colorCompoundBrandStrokeHover: brand.tint20,
  colorCompoundBrandStrokePressed: brand.primary,
  colorNeutralStrokeDisabled: colors_1.grey[26],
  colorNeutralStrokeInvertedDisabled: colors_1.whiteAlpha[40],
  colorTransparentStroke: 'transparent',
  colorTransparentStrokeInteractive: 'transparent',
  colorTransparentStrokeDisabled: 'transparent',
  colorStrokeFocus1: colors_1.black,
  colorStrokeFocus2: colors_1.white,
  colorNeutralShadowAmbient: 'rgba(0,0,0,0.24)',
  colorNeutralShadowKey: 'rgba(0,0,0,0.28)',
  colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.12)',
  colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.14)',
  colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.40)',
  colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.48)',
  colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',
  colorBrandShadowKey: 'rgba(0,0,0,0.25)'
});

exports.generateColorTokens = generateColorTokens;
exports.colorPaletteTokens = /*#__PURE__*/Object.keys(colors_1.sharedColors).reduce((acc, sharedColor) => {
  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);
  const sharedColorTokens = {
    [`colorPalette${color}Background1`]: colors_1.sharedColors[sharedColor].shade40,
    [`colorPalette${color}Background2`]: colors_1.sharedColors[sharedColor].shade30,
    [`colorPalette${color}Background3`]: colors_1.sharedColors[sharedColor].primary,
    [`colorPalette${color}Foreground1`]: colors_1.sharedColors[sharedColor].tint30,
    [`colorPalette${color}Foreground2`]: colors_1.sharedColors[sharedColor].tint40,
    [`colorPalette${color}Foreground3`]: colors_1.sharedColors[sharedColor].tint20,
    [`colorPalette${color}BorderActive`]: colors_1.sharedColors[sharedColor].tint30,
    [`colorPalette${color}Border2`]: colors_1.sharedColors[sharedColor].tint20
  };
  return { ...acc,
    ...sharedColorTokens
  };
}, {});
//# sourceMappingURL=teamsDark.js.map