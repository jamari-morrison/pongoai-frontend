import * as React_2 from 'react';
import type { Theme } from '@fluentui/react-theme';

export declare const MenuContext: React_2.Context<MinimalMenuProps>;

export declare type MinimalMenuProps = {
    hidden?: boolean;
    onDismiss?: () => void;
    target?: React_2.Ref<HTMLElement>;
};

export declare const ProviderContext: React_2.Context<ProviderContextValue>;

export declare interface ProviderContextValue {
    /** Sets the direction of text & generated styles. */
    dir: 'ltr' | 'rtl';
    /** Provides the document, can be undefined during SSR render. */
    targetDocument?: Document;
}

/**
 * Used to provide a CSS class that applies theme css variables
 *
 * Useful for elements in the React tree (can read context) but not in the DOM Tree. E.g. Portals
 */
export declare const ThemeClassNameContext: React_2.Context<string>;

export declare type ThemeClassNameContextValue = string;

export declare const ThemeContext: React_2.Context<ThemeContextValue>;

export declare interface ThemeContextValue extends Theme {
}

/**
 * Context shared by all of the tooltips in the app
 */
export declare const TooltipContext: React_2.Context<TooltipContextType>;

/**
 * The context provided by TooltipProvider
 */
export declare type TooltipContextType = {
    /**
     * When a tooltip is shown, it sets itself as the visibleTooltip.
     * The next tooltip to become visible can use it to hide the previous tooltip immediately.
     */
    visibleTooltip?: {
        hide: () => void;
    };
};

export declare function useFluent(): ProviderContextValue;

export declare const useMenuContext: () => MinimalMenuProps;

export declare function useTheme(): ThemeContextValue;

/**
 * @returns CSS class that applies css variables
 */
export declare function useThemeClassName(): ThemeClassNameContextValue;

export { }
